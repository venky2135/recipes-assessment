package com.securin.recipes.util;

import com.fasterxml.jackson.core.type.TypeReference;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.securin.recipes.entity.Recipe;
import com.securin.recipes.repository.RecipeRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ClassPathResource;
import org.springframework.stereotype.Component;

import jakarta.annotation.PostConstruct;
import java.io.InputStream;
import java.util.List;

@Component
public class RecipeDataLoader {

    @Autowired
    private RecipeRepository recipeRepository;

    @PostConstruct
    public void loadData() {
        try {
            // Load file from resources/data/
            ClassPathResource resource = new ClassPathResource("data/US_recipes.json");
            InputStream inputStream = resource.getInputStream();

            // Parse JSON to List<Recipe>
            ObjectMapper mapper = new ObjectMapper();
            List<Recipe> recipes = mapper.readValue(inputStream, new TypeReference<List<Recipe>>() {});

            // Save to DB if not already loaded
            if (recipeRepository.count() == 0) {
                recipeRepository.saveAll(recipes);
                System.out.println("✅ Recipes loaded successfully: " + recipes.size());
            } else {
                System.out.println("ℹ️ Recipes already exist in DB, skipping load.");
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
