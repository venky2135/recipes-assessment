package com.securin.recipes.entity;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import jakarta.persistence.*;
import lombok.*;

import java.util.List;

@Entity
@Table(name = "recipes")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Recipe {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String contient;
    private String countryState;
    private String cuisine;
    private String title;
    private String url;
    private Double rating;
    private Integer totalTime;
    private Integer prepTime;
    private Integer cookTime;

    @Column(length = 2000)
    private String description;

    @ElementCollection
    @CollectionTable(name = "recipe_ingredients", joinColumns = @JoinColumn(name = "recipe_id"))
    @Column(name = "ingredient", length = 1000)
    private List<String> ingredients;

    @ElementCollection
    @CollectionTable(name = "recipe_instructions", joinColumns = @JoinColumn(name = "recipe_id"))
    @Column(name = "instruction", length = 2000)
    private List<String> instructions;

    /**
     * Nutrients field is flexible because JSON may contain
     * - a Map<String,Object>
     * - a single number
     * - or even null
     */
    @Lob
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private Object nutrients;
}
